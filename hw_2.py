# 1. Выяснить тип результата выражений:
# 15 * 3
# 15 / 3
# 15 // 2
# 15 ** 2

print(f'Тип выражения 15 * 3 = {type(15 * 3)}')
print(f'Тип выражения 15 / 3 = {type(15 / 3)}')
print(f'Тип выражения 15 // 2 = {type(15 // 2)}')
print(f'Тип выражения 15 ** 2 = {type(15 ** 2)}')

# 2. Дан список:
base_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
# (добавить кавычку до и кавычку после элемента списка, являющегося числом)
# и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']

def is_item_with_sign(item):
    return item.startswith(('+', '-'))

for idx,i in enumerate(base_list):
    if is_item_with_sign(i):
        base_list[idx] = f'"{i.zfill(3)}"'
    if i.isdigit():
        if len(i) <= 1:
            base_list[idx] = f'"{i.zfill(2)}"'
        else:
            base_list[idx] = f'"{i}"'
    pass

# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов

base_phrase = ' '.join(base_list)

print(base_phrase)

# Подумать, какое условие записать, чтобы выявить числа среди элементов списка?
# Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться
# к его реализации позже. Главное: дополнить числа до двух разрядов нулём!
#
# 3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place).
# Эта задача намного серьёзнее, чем может сначала показаться.

answer = 'Считаю задачу решенной, тк новый список я не создавал а модифицировал исходный.'


# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
#
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида:
# 'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов списка, как привести
# их к корректному виду. Можно ли при этом не создавать новый список?

base_employees = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
                  'токарь высшего разряда нИКОЛАй', 'директор аэлита']

for i in base_employees:
    print(f'Привет, {i.split(" ")[-1].capitalize()}!')

# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]

price_list = [57.8, 46.51, 97, 63.50, 37.78, 15.30, 50, 100, 0.50, 1.50]

for i in price_list:
    if isinstance(i, float):
        rub, kk = int(i), i - int(i)
        print(f'цена = {rub} руб {round(kk * 100)} коп')
    else:
        print(f'цена = {i} руб 00 коп')

# Вывести на экран эти цены через запятую в одну строку,
# цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки,
# как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).

print(f'\n{id(price_list)} - id НЕ сортированного списка')
price_list.sort()
print(f'{id(price_list)} - id сортированного списка')
print(price_list)


# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров.
# Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

print(sorted(price_list, reverse=1)[:5])


# Задачи со * предназначены для продвинутых учеников, которым мало сделать обычное задание.