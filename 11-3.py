"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.

Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class Error(Exception):
    pass


class NotANumberErr(Error):
    pass


def nums_loop():
    nums_list = []

    while True:

        user_input = input('Введи число или "stop" для выхода: ')

        if str.lower(user_input) != 'stop':

            try:
                if not int(user_input):
                    raise NotANumberErr
                else:
                    nums_list.append(int(user_input))

            except (ValueError, NotANumberErr):
                print('Нужно вводить число, попробуй еще раз: ')

        else:
            break

    print(nums_list)


nums_loop()

